// -*- C++ -*-
// $Id: initFields.cc.ex3,v 1.1 2011/07/21 16:11:48 jd Exp $

#include <cmath>
#include "global.h"

namespace mhd2d
{

  // position of cell center computed from cell index
  static real xcenter(int i) { return xmin + (i+0.5)*dx; }
  static real ycenter(int j) { return ymin + (j+0.5)*dy; }

  // initial conditions
  void initFields()
  {
    // loop over all cells, incl. ghost cells (2 layers)
    for(int j=-2; j<ny+2; j++){
      const real y = ycenter(j);

      for(int i=-2; i<nx+2; i++){
        // x-center of current cells
        const real x = xcenter(i);

        real p;

        if(x < -.4 ){
          // set the field variables
          rho(i, j) = 5;
          ux(i, j) = 10;
          uy(i, j) = 0.;
          bx(i, j) = 0.;
          by(i, j) = 0.5;
          p=200;
        }else{
          rho(i, j) = 1;
          ux(i, j) = 0;
          uy(i, j) = 0.;
          bx(i, j) = 0.;
          by(i, j) = 5.;
          p=1;
        }

        if(x*x + y*y < .15*.15){
          rho(i, j) = 100.;
        }

        // internal energy is computed from p according to its definition
        e(i, j) = 
          + p / (gamma-1.)
          + 0.5*( sqr(ux(i, j)) + sqr(uy(i, j)) ) / rho(i, j)
          + 0.5*( sqr(bx(i, j)) + sqr(by(i, j)) );
      }
    }
    
    // finally, apply b.c. to ensure periodicity
    boundaryCond();
  }
  
}


